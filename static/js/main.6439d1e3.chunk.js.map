{"version":3,"sources":["components/Quote.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteContainer","styled","div","Quote","quote","author","Container","Button","button","App","useState","setQuote","retrieveAPI","a","fetch","api","json","useEffect","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8hCAGA,IAAMA,EAAiBC,IAAOC,IAAV,KA4CLC,EATD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,OACI,eAACJ,EAAD,WACI,6BAAKI,EAAMA,QACX,4BAAIA,EAAMC,a,smBCrCtB,IAAMC,EAAYL,IAAOC,IAAV,KAOTK,EAASN,IAAOO,OAAV,KA8CGC,MA7Bf,WAAe,MAGaC,mBAAS,IAHtB,mBAGNN,EAHM,KAGCO,EAHD,KAKPC,EAAW,uCAAG,8BAAAC,EAAA,sEACAC,MAAM,uDADN,cACZC,EADY,gBAEEA,EAAIC,OAFN,OAEZZ,EAFY,OAGlBO,EAASP,EAAM,IAHG,2CAAH,qDAUjB,OAJAa,qBAAU,WACRL,MACC,IAGD,eAACN,EAAD,WACE,cAAC,EAAD,CACEF,MAAOA,IAET,cAACG,EAAD,CACEW,QAASN,EADX,2BCrCSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6439d1e3.chunk.js","sourcesContent":["import React from 'react'\nimport styled from \"@emotion/styled\"\n\nconst QuoteContainer = styled.div`\n    padding: 3rem;\n    border-radious: 0.5rem;\n    background-color: #fff;\n    max-width: 800px;\n    \n    @media (min-width: 992px) {\n        margin-top: 10rem;\n    } \n\n    h1 {\n        font-family: Arial, Helvetica, sans-serif;\n        text-align: center;\n        position: relative;\n        padding-left: 4rem;\n\n        &::before {\n            content: open-quote;\n            font-size: 10rem;\n            color: black;\n            position: absolute;\n            left: -1rem;\n            top: -2rem;\n        }\n    }\n    p { \n        font-family: Verdana, Geneva, Tahoma, sans-serif;\n        font-size: 1.4rem;\n        font-weight: bold;\n        text-align: right;\n        color: #666;\n        margin-top: 2rem;\n    }\n`\n\nconst Quote = ({quote}) => {\n    return ( \n        <QuoteContainer>\n            <h1>{quote.quote}</h1>\n            <p>{quote.author}</p>\n        </QuoteContainer>\n    )\n}\n \nexport default Quote","import React, {useState, useEffect} from \"react\"\nimport styled from \"@emotion/styled\"\nimport Quote from \"./components/Quote\"\n\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 5rem;\n  flex-direction: column;\n`\n\nconst Button = styled.button`\n  background: -webkit-linear-gradient(top left, #007d35 0%, #007d35 40%, #0f574e 100%);\n  background-size: 300px;\n  font-family: Arial, Helvetica, sans-serif;\n  color: #fff;\n  margin-top: 3rem;\n  padding: 1rem 3rem;\n  font-size: 2rem;\n  border: 2px solid black;\n  transition: background-size .8s ease;\n\n  :hover {\n    cursor: pointer;\n    background-size: 400px;\n  }\n`\n\nfunction App() {\n\n  // Quotes state\n  const [quote, setQuote] = useState({})\n\n  const retrieveAPI = async () => {\n    const api = await fetch(\"https://breaking-bad-quotes.herokuapp.com/v1/quotes\")\n    const quote = await api.json()\n    setQuote(quote[0])\n  }\n\n  useEffect(() => {\n    retrieveAPI()\n  }, [])\n\n  return (\n    <Container>\n      <Quote\n        quote={quote}\n      />\n      <Button\n        onClick={retrieveAPI}\n      >\n        New quote\n      </Button>\n    </Container>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}